{"version":3,"sources":["../../src/CursorPosition.tsx","App.tsx","index.tsx"],"names":["lat","mgrsGraticuleName","garsGraticuleName","overlayEnabled","uiStyle","marginBottom","border","borderRadius","backgroundColor","outline","fontSize","boxShadow","color","padding","minHeight","cursor","App","MapContainer","center","zoom","minZoom","maxZoom","maxBounds","LayersControl","position","BaseLayer","checked","name","TileLayer","url","attribution","Overlay","LayerGroup","MgrsGraticule","style","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65aff7c4.chunk.js","sourcesContent":["var __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\r\nimport { GarsPrecision, llToGars } from 'gars-utils';\r\n// Ignore missing type definitions\r\n// @ts-ignore\r\nimport { forward } from 'mgrs';\r\nimport { useState } from 'react';\r\nimport { useMap, useMapEvents } from 'react-leaflet';\r\nvar GeoStandards;\r\n(function (GeoStandards) {\r\n    GeoStandards[GeoStandards[\"latLng\"] = 0] = \"latLng\";\r\n    GeoStandards[GeoStandards[\"dms\"] = 1] = \"dms\";\r\n    GeoStandards[GeoStandards[\"mgrs\"] = 2] = \"mgrs\";\r\n    GeoStandards[GeoStandards[\"gars\"] = 3] = \"gars\";\r\n})(GeoStandards || (GeoStandards = {}));\r\nvar currentGeoStandard = GeoStandards.mgrs;\r\n/**\r\n * MGRS's forward function returns the MGRS string without any whitespace\r\n * separating the component values.  This function splits them up.\r\n *\r\n * @param lat - Decimal Latitude value\r\n * @param lng - Decimal Longitude value\r\n * @returns MGRS String in format: (NNL LL NNNN NNNN)\r\n */\r\nfunction llToFormattedMgrs(lat, lng) {\r\n    var temp = forward([lng, lat], 4);\r\n    var gzd = temp.slice(0, 3);\r\n    var hk = temp.slice(3, 5);\r\n    var easting = temp.slice(5, 9);\r\n    var northing = temp.slice(9, 13);\r\n    return gzd + ' ' + hk + ' ' + easting + ' ' + northing;\r\n}\r\n/**\r\n * Takes a lat/lng and converts it to a specific standard, then formats\r\n * and returns it as a string.\r\n *\r\n * @param lat - Decimal Latitude value\r\n * @param lng - Decimal Longitude value\r\n * @returns\r\n */\r\nfunction getPosition(lat, lng) {\r\n    var result = '';\r\n    if (currentGeoStandard === GeoStandards.latLng) {\r\n        var latCardinal = lat >= 0 ? 'N' : 'S';\r\n        var lngCardinal = lng >= 0 ? 'E' : 'W';\r\n        var formattedLat = Math.abs(lat).toFixed(4).toString();\r\n        if (Math.abs(lat) < 10) {\r\n            formattedLat = '0' + formattedLat;\r\n        }\r\n        var formattedLng = Math.abs(lng).toFixed(4).toString();\r\n        if (Math.abs(lng) < 10) {\r\n            formattedLng = '00' + formattedLng;\r\n        }\r\n        else if (Math.abs(lng) < 100) {\r\n            formattedLng = '0' + formattedLng;\r\n        }\r\n        result = formattedLat + ' ' + latCardinal + ' ' + formattedLng + ' ' + lngCardinal;\r\n    }\r\n    else if (currentGeoStandard === GeoStandards.dms) {\r\n        result = convertDMS(lat, lng);\r\n    }\r\n    else if (currentGeoStandard === GeoStandards.mgrs) {\r\n        result = llToFormattedMgrs(lat, lng);\r\n    }\r\n    else if (currentGeoStandard === GeoStandards.gars) {\r\n        result = llToGars({ lat: lat, lng: lng }, GarsPrecision.FiveMinutes);\r\n    }\r\n    else {\r\n        console.error('Unknown GeoStandard selected');\r\n    }\r\n    return result;\r\n}\r\nfunction toDegreesMinutesAndSeconds(coordinate, isLat) {\r\n    var absolute = Math.abs(coordinate);\r\n    var degrees = Math.floor(absolute).toString();\r\n    var minutesNotTruncated = (absolute - Math.floor(absolute)) * 60;\r\n    var minutes = Math.floor(minutesNotTruncated).toString();\r\n    var seconds = ((minutesNotTruncated - Math.floor(minutesNotTruncated)) * 60).toFixed(0).toString();\r\n    if (isLat) {\r\n        if (Math.abs(coordinate) < 10) {\r\n            degrees = '0' + degrees;\r\n        }\r\n    }\r\n    else {\r\n        if (Math.abs(coordinate) < 10) {\r\n            degrees = '00' + degrees;\r\n        }\r\n        else if (Math.abs(coordinate) < 100) {\r\n            degrees = '0' + degrees;\r\n        }\r\n    }\r\n    if (minutes.length < 2) {\r\n        minutes = '0' + minutes;\r\n    }\r\n    if (seconds.length < 2) {\r\n        seconds = '0' + seconds;\r\n    }\r\n    return degrees + 'Â° ' + minutes + \"' \" + seconds + '\"';\r\n}\r\nfunction convertDMS(lat, lng) {\r\n    var latitude = toDegreesMinutesAndSeconds(lat, true);\r\n    var latitudeCardinal = lat >= 0 ? 'N' : 'S';\r\n    var longitude = toDegreesMinutesAndSeconds(lng, false);\r\n    var longitudeCardinal = lng >= 0 ? 'E' : 'W';\r\n    return latitude + ' ' + latitudeCardinal + ' ' + longitude + ' ' + longitudeCardinal;\r\n}\r\n// Allowed positions the UI can occupy from the leaflet API\r\nvar allowedPositions = [\r\n    'leaflet-bottom leaflet-right',\r\n    'leaflet-bottom leaflet-left',\r\n    'leaflet-top leaflet-right',\r\n    'leaflet-top leaflet-left',\r\n];\r\n/**\r\n * CursorPosition - Functional component which displays the cursor and map position\r\n * @returns\r\n */\r\nvar CursorPosition = function (props) {\r\n    var map = useMap();\r\n    var uiPosition = allowedPositions.includes(props.position) ? props.position : 'leaflet-bottom leaflet-right';\r\n    var defaultStyle = {\r\n        marginBottom: '20px',\r\n        border: '1px solid rgba(0,0,0,0.2)',\r\n        borderRadius: '4px',\r\n        backgroundColor: '#FFFFFF',\r\n        outline: 'none',\r\n        fontSize: '14px',\r\n        boxShadow: 'none',\r\n        color: '#333',\r\n        padding: '2px 2px',\r\n        minHeight: '18px',\r\n        cursor: 'pointer',\r\n    };\r\n    var style = props.style || defaultStyle;\r\n    // Storing the proper lat/lng in state becase we need to be able to convert the position\r\n    // when the geo standard is changed\r\n    var _a = useState({ lat: 0, lng: 0 }), currentCursorLatLng = _a[0], setCurrentCursorLatLng = _a[1];\r\n    var _b = useState({ lat: 0, lng: 0 }), currentCentreLatLng = _b[0], setCurrentCentreLatLng = _b[1];\r\n    // The exact values being displayed in the component.  It's needed to have a second set of variables\r\n    // to track this as it won't account for events where the cursor is off map.\r\n    var _c = useState(''), cursorPosition = _c[0], setCursorPosition = _c[1];\r\n    var _d = useState(llToFormattedMgrs(map.getCenter().lat, map.getCenter().lng)), centrePosition = _d[0], setCentrePosition = _d[1];\r\n    function changeGeoStandard() {\r\n        if (currentGeoStandard === GeoStandards.mgrs) {\r\n            currentGeoStandard = GeoStandards.gars;\r\n        }\r\n        else if (currentGeoStandard === GeoStandards.gars) {\r\n            currentGeoStandard = GeoStandards.latLng;\r\n        }\r\n        else if (currentGeoStandard === GeoStandards.latLng) {\r\n            currentGeoStandard = GeoStandards.dms;\r\n        }\r\n        else if (currentGeoStandard === GeoStandards.dms) {\r\n            currentGeoStandard = GeoStandards.mgrs;\r\n        }\r\n        setCentrePosition(getPosition(currentCentreLatLng.lat, currentCentreLatLng.lng));\r\n        setCursorPosition(getPosition(currentCursorLatLng.lat, currentCursorLatLng.lng));\r\n    }\r\n    // Specific map events which will result in an update to the component\r\n    useMapEvents({\r\n        mousemove: function (e) {\r\n            var latLng = e.latlng;\r\n            setCurrentCursorLatLng(latLng);\r\n            setCursorPosition(getPosition(latLng.lat, latLng.lng));\r\n            setCurrentCentreLatLng(map.getCenter());\r\n            setCentrePosition(getPosition(map.getCenter().lat, map.getCenter().lng));\r\n        },\r\n        move: function (e) {\r\n            var latLng = map.getCenter();\r\n            setCentrePosition(getPosition(latLng.lat, latLng.lng));\r\n        },\r\n        mouseout: function () {\r\n            setCursorPosition('Off Map');\r\n        },\r\n    });\r\n    return (_jsx(\"div\", __assign({ className: uiPosition }, { children: _jsx(\"div\", __assign({ className: \"leaflet-control leaflet-bar\", style: style }, { children: _jsx(\"table\", { children: _jsxs(\"tbody\", { children: [_jsxs(\"tr\", { children: [_jsx(\"td\", __assign({ rowSpan: 2, onClick: changeGeoStandard }, { children: \"\\u27F3\" }), void 0),\r\n                                _jsx(\"td\", { children: \"Cursor: \" }, void 0),\r\n                                _jsx(\"td\", { children: cursorPosition }, void 0)] }, void 0),\r\n                        _jsxs(\"tr\", { children: [_jsx(\"td\", { children: \"Centre: \" }, void 0),\r\n                                _jsx(\"td\", { children: centrePosition }, void 0)] }, void 0)] }, void 0) }, void 0) }), void 0) }), void 0));\r\n};\r\nexport default CursorPosition;\r\n//# sourceMappingURL=CursorPosition.js.map","import { CSSProperties } from 'react';\nimport { LayersControl, LayerGroup, MapContainer, TileLayer, ZoomControl } from 'react-leaflet';\nimport CursorPosition from 'react-leaflet-cursor-position';\n// Ignore missing type definitions\n// @ts-ignore\nimport { MgrsGraticule } from 'react-leaflet-mgrs-graticule';\nimport { GarsGraticule } from 'react-leaflet-gars-graticule';\n\nimport './App.css';\n\nconst mgrsGraticuleName = 'MGRS';\nconst garsGraticuleName = 'GARS';\nconst overlayEnabled = true;\n\nconst uiStyle: CSSProperties = {\n  marginBottom: '20px',\n  border: '1px solid rgba(0,0,0,0.2)',\n  borderRadius: '4px',\n  backgroundColor: '#FFFFFF',\n  outline: 'none',\n  fontSize: '14px',\n  boxShadow: 'none',\n  color: '#333',\n  padding: '2px 2px',\n  minHeight: '18px',\n  cursor: 'pointer',\n};\n\nfunction App() {\n  return (\n    <MapContainer\n      center={[45.4, -75.7]}\n      zoom={11}\n      minZoom={3}\n      maxZoom={16}\n      maxBounds={[\n        [-90, -180],\n        [90, 180],\n      ]}\n    >\n      <LayersControl position=\"topright\">\n        <LayersControl.BaseLayer checked name=\"ESRI Satellite\">\n          <TileLayer\n            url=\"https://services.arcgisonline.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution='&copy; <a href=\"https://wiki.openstreetmap.org/wiki/Esri\"></a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"ESRI Clarity\">\n          <TileLayer\n            url=\"https://clarity.maptiles.arcgis.com/arcgis/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\"\n            attribution='&copy; <a href=\"https://wiki.openstreetmap.org/wiki/Esri\"></a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"OSM\">\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"OSM Topo\">\n          <TileLayer url=\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\" attribution=\"OSM\" />\n        </LayersControl.BaseLayer>\n        <LayersControl.Overlay checked={overlayEnabled} name={mgrsGraticuleName}>\n          <LayerGroup>\n            <MgrsGraticule name={mgrsGraticuleName} checked={overlayEnabled} />\n          </LayerGroup>\n        </LayersControl.Overlay>\n        <LayersControl.Overlay name={garsGraticuleName}>\n          <LayerGroup>\n            <GarsGraticule name={garsGraticuleName} checked={!overlayEnabled} />\n          </LayerGroup>\n        </LayersControl.Overlay>\n      </LayersControl>\n      <CursorPosition position={'leaflet-top lsft'} style={uiStyle} />\n    </MapContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}